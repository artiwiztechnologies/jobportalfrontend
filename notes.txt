pricing.js file contents as on 17/12/21

import React, { useContext, useEffect, useState } from "react";
import Link from "next/link";
import PageWrapper from "../components/PageWrapper";
import { displayRazorpay, fetchOrderData, isAuthenticated, ValidatePayment,getPlans, getUserWithId, getCompanyWithId, updateAuthData } from "../helper";
import logo from "../assets/Textilejobs2.png";
import { v4 as uuidv4 } from 'uuid';
import router from "next/router";
import { printRes ,alertInfo,alertSuccess,alertWarning, startFreeTrial} from "../helper2";
import GlobalContext from "../context/GlobalContext";



const Pricing = () => {
  const [plans,setPlans] = useState();
  const [username,setUsername] = useState();
  const [phnnum,setPhnnum] = useState();
  const [disabled,setDisabled] = useState(true);

  const MerchantID = "mlpZrq88573078670457"
    const Merchant_key = "b0z4TdXl#Az7GxIA"
    const HOST = "https://securegw-stage.paytm.in";
    function onScriptLoad(txnToken, orderId, amount) {
      var config = {
          "root": "",
          "flow": "DEFAULT",
          "merchant":{
               "name":"XYZ Enterprises",
               "logo":"https://developer.paytm.com/demo//static/images/merchant-logo.png?v=1.4"
           },
           "style":{
               "headerBackgroundColor":"#8dd8ff",
               "headerColor":"#3f3f40"
          },
          "data": {
              "orderId": orderId,
              "token": txnToken,
              "tokenType": "TXN_TOKEN",
              // "amount": amount
          },
          "handler":{
               "notifyMerchant": function (eventName, data) {
                  if(eventName == 'SESSION_EXPIRED'){
                      alert("Your session has expired!!");
                      location.reload();
                  }else{
                    console.log(data)
                  }
               }
          }
      };

      if (window.Paytm && window.Paytm.CheckoutJS) {
          // initialze configuration using init method
          window.Paytm.CheckoutJS.init(config).then(function onSuccess() {
              console.log('Before JS Checkout invoke');
              // after successfully update configuration invoke checkoutjs
              window.Paytm.CheckoutJS.invoke();
          }).catch(function onError(error) {
              console.log("Error => ", error);
          });
      }
  }



  const getDataRequired = () =>{
  getPlans()
    .then(data=>{
      printRes(data);
      setPlans(data.plans)
      if(data.error==="token_expired"){
        updateAuthData(isAuthenticated())
        getDataRequired();
      }
    })
    if(isAuthenticated()){
      setDisabled(false);

    if(isAuthenticated().user_id){
      getUserWithId(isAuthenticated().user_id,isAuthenticated().access_token)
        .then(d1=>{
          printRes(d1)
          setPhnnum(d1.phonenumber);
          setUsername(d1.name);
        })
        .catch(err=>{
          alertWarning(err)
        })
    }else if(isAuthenticated().company_id){
        getCompanyWithId(isAuthenticated().company_id,isAuthenticated().access_token)
          .then(d2=>{
            printRes(d2);
            setPhnnum(d2.phonenumber)
            setUsername(d2.name);
            
            
          })
          .catch(err=>{
            alertWarning(err);
          })
    }
  }
  else{
    alertWarning("you are not signed in,please do signin to access our plans!")
  }
  }
  
  useEffect(()=>{

     //post req ,send planid ,rootlink,user_type to server
    //get txn_token,order_id and amount from the response
    getDataRequired()
    const script = document.createElement('script');
    script.src = `https://securegw-stage.paytm.in//merchantpgpui/checkoutjs/merchants/${MerchantID}.js`;
    document.body.appendChild(script);

  },[])
  const [orderId,setOrderId] = useState('');
  
  const initiatePayment = () =>{
    
      
    
    printRes("initiatepayment")
    return new Promise((resolve)=>{
      const script = document.createElement('script');
      script.src = "https://checkout.razorpay.com/v1/checkout.js";
      document.body.appendChild(script)
      script.onload = () =>{
          resolve(true)
          
      } 
      script.onerror = () =>{
          resolve(false)
      }
    })
   
  }



const [amount,setAmount] = useState();



async function displayRazorpay(plan_id,planname) {
 
    const res = await initiatePayment()

    const orderFetchData = {
      "plan_id": plan_id,
      "user_id": isAuthenticated().user_id ? isAuthenticated().user_id : isAuthenticated().company_id,
      "email": isAuthenticated().email,
      "user_type": isAuthenticated().type
  }

    const data = await  fetchOrderData(orderFetchData,isAuthenticated().access_token)
      // .then(data=>{
      //   printRes(data)
      //   setOrderId(data.id)
      //   setAmount(data.amount)
      // })

    printRes(data)




    if(!res){
      alertWarning("razor pay SDK failed");
      return
    }

    if(!data){
      alertWarning("cant get payment data from the server!");
      return
    }

    printRes(data)
    
    
    
    
    const options = {
      key: "rzp_test_HG5GAR8YfRNzGa",
      
      currency: 'INR',
      amount: data.amount,
      name: planname,
      description: `You have opted for the ${planname} plan.`,
      image: logo ,
      // id: uuidv4(),
      // order_id: "order_I8VB1HVFciWXC5",
      order_id: data.id,

      
      
      handler: function (response) {
        printRes(response)
        const req_data = {
          
            "razorpay_payment_id": response.razorpay_payment_id,
            "razorpay_order_id": response.razorpay_order_id,
            "razorpay_signature": response.razorpay_signature,
            "plan_id":plan_id,
            "user_type":isAuthenticated().type
        
        }
        printRes(req_data)
        ValidatePayment(req_data,isAuthenticated().access_token)
          .then(d1=>{
            printRes(d1);
            // alertSuccess(d1.message);
            if(d1.message==="Valid payment."){
              alertSuccess(d1.message);
            // if(isAuthenticated().user_id){
            //   router.push("/search-grid");
            // }else{
            //   router.push("/dashboard-settings");
            // }
            
            }else{
              alertInfo(d1.message);
            }
          })
        // alertInfo("PAYMENT ID ::" + response.razorpay_payment_id);
        // alertInfo("ORDER ID :: " + response.razorpay_order_id);
      },
      prefill: {
        name: username,
        email: isAuthenticated().email,
        contact: phnnum,
      },
    };
  
    const paymentObject = new window.Razorpay(options);
    paymentObject.open();
  }
 
  const gContext = useContext(GlobalContext);

  const subscribeToFreeTrial = (plan_data) =>{
    startFreeTrial(isAuthenticated().access_token,plan_data)
    .then(data=>{
      printRes(data);
      if(data.error){
        updateAuthData(isAuthenticated())
        subscribeToFreeTrial(plan_data)
      }else{
        alertInfo(data.message)
      }

    })
    .catch(err=>{
      printRes(err)
    })
  }
  return (
    <>
      <PageWrapper>
        <div className="pt-md pt-17">
          {/* <!-- pricing area function start --> */}
          {/* <!-- pricing section --> */}
          <div className="pricing-area">
            <div className="container pt-12 pt-lg-24 pb-13 pb-lg-25">
              <div className="row justify-content-center">
                <div
                  className="col-xxl-6 col-lg-7 col-md-9"
                  data-aos="fade-in"
                  data-aos-duration="1000"
                  data-aos-delay="500"
                >
                  {/* <!-- section-title start --> */}
                  <div className="section-title text-center mb-12 mb-lg-18 mb-lg-15 pb-lg-15 pb-0">
                    <h2 className="mb-9">
                      Check our amazing plans, choose the best one for you.
                    </h2>
                    <p className="text-default-color font-size-4 px-5 px-md-10 px-lg-15 px-xl-24 px-xxl-22">
                      Complete Design Toolkit – huge collection of elements,
                      rich customization options, flexible layouts.
                    </p>
                  </div>
                  {/* <!-- section-title end --> */}
                </div>
              </div>
              <div className="row justify-content-center">
                <div className="col-xxl-10 col-xl-11">
                  <div className="row justify-content-center">
                   {
                     plans?.map((plan)=>(
                      <div
                      key={plan.id}
                      className="col-lg-4 col-md-6 col-xs-9"
                      data-aos="fade-right"
                      data-aos-duration="1000"
                      data-aos-delay="500"
                    >
                      {/* <!-- card start --> */}
                      <div className="card border-mercury rounded-8 mb-lg-3 mb-9 px-xl-12 px-lg-8 px-12 pb-12 hover-shadow-hitgray">
                        {/* <!-- card-header start --> */}
                        <div className="card-header bg-transparent border-hit-gray-opacity-5 text-center pt-11 pb-8">
                          <div className="pricing-title text-center">
                            <h5 className="font-weight-semibold font-size-6 text-black-2">
                              {plan.plan_name}
                            </h5>
                            <h6 className="font-size-4 text-gray font-weight-normal">
                              For single person only
                            </h6>
                          </div>
                          <h2 className="mt-11 text-dodger">
                          {`₹${plan.plan_rate}`}
                            <span className="font-size-4 text-smoke font-weight-normal">
                              {`/${plan.duration} days`}
                            </span>{" "}
                          </h2>
                        </div>
                        {/* <!-- card-header end --> */}
                        {/* <!-- card-body start --> */}
                        <div className="card-body px-0 pt-11 pb-15">
                          <ul className="list-unstyled">

                          {
                           plan.description.map(des=>(
                            <li className="mb-6 text-black-2 d-flex font-size-4">
                              <i className="fas fa-check font-size-3 text-black-2 mr-3"></i>{" "}
                              {des}
                            </li>
                           ))
                          }
                            
                            {/* <li className="mb-6 text-black-2 d-flex font-size-4">
                              <i className="fas fa-check font-size-3 text-black-2 mr-3"></i>{" "}
                                Perfect Job in a month
                            </li>
                            <li className="mb-6 text-black-2 d-flex font-size-4">
                              <i className="fas fa-check font-size-3 text-black-2 mr-3"></i>{" "}
                              Technical consultancy
                            </li>
                            <li className="mb-6 text-black-2 d-flex font-size-4">
                              <i className="fas fa-check font-size-3 text-black-2 mr-3"></i>{" "}
                              Latest Tech Updates
                            </li>
                            <li className="mb-6 text-black-2 d-flex font-size-4">
                              <i className="fas fa-check font-size-3 text-black-2 mr-3"></i>{" "}
                              Abroad Opportunities
                            </li>
                            <li className="mb-6 text-black-2 d-flex font-size-4">
                              <i className="fas fa-check font-size-3 text-black-2 mr-3"></i>{" "}
                              One Technical webinar
                            </li> */}
                          </ul>
                        </div>
                        {/* <!-- card-body end --> */}
                        {/* <!-- card-footer end --> */}
                        <div className="card-footer bg-transparent border-0 px-0 py-0">
                          
                            <button onClick={()=>{
                              if(isAuthenticated()){
                              if(plan.trial){
                                const plan_data = {
                                  "plan_id": plan.id,
                                  "email": isAuthenticated().email,
                                  "user_type": isAuthenticated().type
                                }
                                subscribeToFreeTrial(plan_data)
                                
                                // startFreeTrial(isAuthenticated().access_token,plan_data)
                                //   .then(data=>{
                                //     printRes(data);
                                //     if(data.message){
                                //       alertInfo(data.message);
                                //     }

                                //   })
                                //   .catch(err=>{
                                //     printRes(err)
                                //   })
                              }else{
                                printRes(plan)
                              // displayRazorpay(plan.id,plan.plan_name)
                              let test_tkn =  "4de93f7be06a493c91ceea8aebed5e9f1639754210613";
                              let test_order_id = "9658742315425";
                              onScriptLoad(test_tkn,test_order_id,"1.00");
                              }
                              }else{
                                alertInfo('Please login to subscribe!')
                                gContext.toggleSignInModal();
                              }
                            }} className="btn btn-green btn-h-60 text-white rounded-5 btn-block text-uppercase">
                              {`Start with ${plan.plan_name}`}
                            </button>
                          
                        </div>
                        {/* <!-- card-footer end --> */}
                      </div>
                      {/* <!-- card end --> */}
                    </div>
                     ))
                   }
                    
                    
                  </div>
                </div>
              </div>
            </div>
          </div>
          {/* <!-- pricing area function end --> */}
        </div>
      </PageWrapper>
    </>
  );
};
export default Pricing;


      <PageWrapper>
        <div className="bg-default-2 pt-16 pb-12 pt-lg-22 pb-lg-27">
          <div className="container">
            {/* <div className="inputcontainer w-100 d-flex align-items-center justify-content-center flex-wrap p-5">
              <input type="text" value={query} onChange={(e)=>{
                setQuery(e.target.value)
              }} />
              <button>
                Search here
              </button>
            </div> */}
            <h1 className="d-flex align-items-center justify-content-center">About Us</h1>
            <div>
              <div className="aboutustextcontent">
                  
                  <p>
                  Jobstextile.com is the most innovative and second largest online job portal in India. Founded in 2008, over the past decade, Jobstextile.com has become a prominent name in the recruitment industry. The popularity of the portal is evident from the fact that it has crossed the 3.4 crore candidate landmark and has more than 3 lakh latest job vacancies from leading companies on the site.

Jobstextile.com connects jobseekers and recruiters by accurately matching candidate profiles to the relevant job openings through an advanced 2-way matching technology. While most job portals only focus on getting candidates the next job, Shine focuses on the entire career growth of candidates. To this end, Shine has launched Shine Learning- India’s largest career skills site for working professionals with over 500+ courses & certifications.

As the industry shifts towards mobile, Jobstextile.com is leading the transition and is the fastest growing job portal on mobile devices, witnessing a 100% YOY growth in mobile traffic and also offers on-the-go jobs through the Shine Job Search App.

Shine works closely to bridge the gap between talent & opportunities and offers end-to-end recruitment solutions. Shine Job Fair brings candidates and top employers under one roof. While Shine HR Conclave brings top HR leaders to share insights on latest trends, innovations & best practices in the HR industry. Shine also has a large reach through its print product, Shine Jobs – the Tuesday Job supplement of Hindustan Times– making it the only job portal with an integrated print and online offering
                  </p>
              </div>
              {/* <div className="aboutusimgcontent_imgpartners">
                  <img 
                  src="https://image.shutterstock.com/image-photo/collage-power-energy-concepts-260nw-269638667.jpg" 
                  alt="" />
              </div> */}
            </div>
          </div>
        </div>
      </PageWrapper>



      <table className="table table-striped">
                      <thead>
                        <tr>
                          <th
                            scope="col"
                            className="pl-0 border-0 font-size-4 font-weight-normal"
                          >
                            Name
                          </th>
                          <th
                            scope="col"
                            className="pl-4 border-0 font-size-4 font-weight-normal"
                          >
                            Job Type
                          </th>
                          <th
                            scope="col"
                            className="pl-4 border-0 font-size-4 font-weight-normal"
                          >
                            City
                          </th>
                          <th
                            scope="col"
                            className="pl-4 border-0 font-size-4 font-weight-normal"
                          >
                            Created on
                          </th>
                          <th
                            scope="col"
                            className="pl-4 border-0 font-size-4 font-weight-normal"
                          >
                            CTC
                          </th>
                          <th
                            scope="col"
                            className="pl-4 border-0 font-size-4 font-weight-normal"
                          ></th>
                          <th
                            scope="col"
                            className="pl-4 border-0 font-size-4 font-weight-normal"
                          ></th>
                        </tr>
                      </thead>
                      <tbody>
                        {/* {JSON.stringify(listJobs)} */}

                        {jobs
                          .filter((val) => {
                            if (option == "") {
                              return val;
                            } else if (val.title === option) {
                              return val;
                            }
                          })
                          .map((job) => (
                            <tr className="border border-color-2">
                              <th
                                scope="row"
                                className="pl-6 border-0 py-7 min-width-px-235"
                              >
                                <div className="">
                                  <Link href="/job-details">
                                    <a className="font-size-4 mb-0 font-weight-semibold text-black-2">
                                      {job.title}
                                    </a>
                                  </Link>
                                </div>
                              </th>
                              <td className="table-y-middle py-7 min-width-px-135">
                                <h3 className="font-size-4 font-weight-normal text-black-2 mb-0">
                                  {job.job_type}
                                </h3>
                              </td>
                              <td className="table-y-middle py-7 min-width-px-125">
                                <h3 className="font-size-4 font-weight-normal text-black-2 mb-0">
                                  New York
                                </h3>
                              </td>
                              <td className="table-y-middle py-7 min-width-px-155">
                                <h3 className="font-size-4 font-weight-normal text-black-2 mb-0">
                                  {job.date}
                                </h3>
                              </td>
                              <td className="table-y-middle py-7 min-width-px-205">
                                <h3 className="font-size-4 font-weight-bold text-black-2 mb-0">
                                  {job.salary}
                                </h3>
                              </td>
                              <td className="table-y-middle py-7 min-width-px-80">
                                <span
                                  style={{
                                    cursor: "pointer",
                                  }}
                                  onClick={() => {
                                    // printRes(gContext.editjid)
                                    gContext.changeEditJid(job.id);
                                    gContext.toggleShowEditJobModal();
                                    getJobFromId(
                                      job.id,
                                      isAuthenticated().access_token
                                    ).then((d) => {
                                      if (d.error === "token_expired") {
                                        updateAuthData(isAuthenticated());
                                        getJobFromId(
                                          job.id,
                                          isAuthenticated().access_token
                                        ).then((d1) => {
                                          printRes(d1);
                                          setJeditData(d1);
                                          gContext.setEditJobData(d1);
                                        });
                                      } else {
                                        printRes(d);
                                        setJeditData(d);
                                        gContext.setEditJobData(d);
                                      }
                                    });
                                  }}
                                  className="font-size-3 font-weight-bold text-green text-uppercase"
                                >
                                  Edit
                                </span>
                              </td>
                              <td className="table-y-middle py-7 min-width-px-100">
                                <span
                                  style={{
                                    cursor: "pointer",
                                  }}
                                  onClick={() => {
                                    setJobIdDel(job.id);
                                    // delJobsByJobId(job.id,isAuthenticated().access_token)
                                    //   .then(d=>{
                                    //     printRes(d);
                                    //     if(d.message==="Job deleted."){
                                    //       alertSuccess(d.message);
                                    //       window.location.reload()
                                    //     }else{
                                    //       alertWarning("something went wrong!");
                                    //     }

                                    //   })
                                  }}
                                  className="font-size-3 font-weight-bold text-red-2 text-uppercase"
                                >
                                  Delete
                                </span>
                              </td>
                            </tr>
                          ))}
                      </tbody>
                    </table>



companyproduct.js before changes to card:
import React from "react";
import { useEffect } from "react";
import { useState } from "react";
import PageWrapper from "../components/PageWrapper";
import { getAllProducts } from "../helper3";
// import companyProductStyles from "../styles/Companyproduct.module.css";

import {isAuthenticated, updateAuthData} from "../helper";
const CompanyProducts = () => {
  const [companies,setCompanies] = useState();
  const [hover,setHover] = useState(false);

  const divStyle = {
      cursor:"pointer",
      width: "350px",
      height: "fit-content"
      // transform:"scale(1.5)"
  } 
  const divStyle1 = {
      cursor: "pointer",
      width:"350px"
      
  }

  const getProducts = () =>{
    getAllProducts(isAuthenticated().access_token)
    .then(data=>{
      if(data.error==="token_expired"){
        updateAuthData(isAuthenticated())
        getProducts();
      }else{
      console.log(data);
      setCompanies(data.companies);
      }
      // console.log(data.product);
      // setProducts(data.product);

    })
  }
  useEffect(()=>{
    getProducts()
  },[])
  return (
    <>
        <PageWrapper>
      <div className="bg-default-2 pt-16 pb-12 pt-lg-22 pb-lg-27">
        <div className="">

        

          {
            companies?.map(comp=>(
              <div className="d-flex flex-column align-items-center my-10">
                <h4>Products of {comp.name}</h4>
                <div className="d-sm-flex flex-row align-items-center justify-content-center flex-wrap my-5">
                  {
                    comp?.products?.map(prod=>(
                      <div style={divStyle}  onMouseEnter={()=>{
                        setHover(true);
                      }} onMouseLeave={()=>{
                        setHover(false)
                      }} className="card mb-3 mx-10 my-5">
              <img style={{
                height: "320px",
                width:"320px",
                objectFit:"contain",
                margin: "10px"
              }} src={prod.photoURL ? prod.photoURL : "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQAm6dU5JsOoX02Rm2pRIq0hW6uIQ8VC8h42w&usqp=CAU"} alt="product image" />
              <div class="card-body">
                <h5 class="card-title">{prod.name}</h5>
                <p>{prod.description}</p>
                <span>Units: {prod.units} Price: Rs.{prod.price}</span>
                {/* price */}
              </div>
          </div>
                    ))
                  }
                </div>
              </div>
            ))
          }
          

        </div>
      </div>
    </PageWrapper>
  </>
  );
};
export default CompanyProducts;

// container d-xs-flex flex-col flex-sm-row justify-content-center align-items-center flex-wrap

// <div class="card mb-3 mx-3 bg-white">
//               <img class="card-img-top" src="https://helpx.adobe.com/content/dam/help/en/photoshop/using/convert-color-image-black-white/jcr_content/main-pars/before_and_after/image-before/Landscape-Color.jpg" alt="Card image cap" />
//               <div class="card-body">
//                 <h5 class="card-title">Product Name</h5>
//                 <span>Units available</span>
//                 <p class="card-text">description</p>
//                 {/* price */}
//                 <p class="card-text"><small class="text-muted">Last updated 3 mins ago</small></p>
//               </div>
//           </div>





<div
              className="col-xl-4 col-md-6 mb-xl-0 mb-13"
              data-aos="fade-right"
              data-aos-duration="500"
            >
              {/* <!-- card start --> */}
              <div className="card bg-transparent border-0">
                {/* <!-- card img start --> */}
                <img src="https://www.thermaxglobal.com/wp-content/uploads/2020/05/image-not-found-300x169.jpg" className="card-img-top" alt="..." />
                {/* <!-- card img end --> */}
                {/* <!-- card-body start --> */}
                <div className="card-body pt-11 px-0 pb-0">
                  <Link href="/#">
                    <a className="text-uppercase font-size-3 font-weight-bold px-4 py-1">
                      CV Writing
                    </a>
                  </Link>
                  <h4>
                    <Link href="/#">
                      <a className="card-title font-size-7 mt-8 mb-6 heading-default-color">
                        How to make a perfect CV that attracts the attention{" "}
                      </a>
                    </Link>
                  </h4>
                  <p className="card-text mb-9 font-size-4">
                    Collaboratively administrate empowered markets via
                    plug-and-play networks. Dynamically procrastinate B2C users
                    after installed base.
                  </p>
                  {/* <!-- media start --> */}
                  <div className="media mb-5 pr-9">
                    {/* <!-- media img start --> */}
                    <Link href="/#">
                      <a>
                        <img
                          src="https://www.thermaxglobal.com/wp-content/uploads/2020/05/image-not-found-300x169.jpg"
                          className="align-self-center circle-54 mr-3 mt-2"
                          alt=""
                        />
                      </a>
                    </Link>
                    {/* <!-- media img start --> */}
                    {/* <!-- media body start --> */}
                    <div className="media-body pl-4 pt-2">
                      <h6 className="mb-0">
                        <Link href="/#">
                          <a className="mb-0 font-size-4 font-weight-semibold heading-default-color line-height-reset">
                            Anna Frank
                          </a>
                        </Link>
                      </h6>
                      <p className="mb-0">
                        <Link href="/#">
                          <a className="font-size-3 text-default-color">
                            Creative Director
                          </a>
                        </Link>
                      </p>
                    </div>
                    {/* <!-- media body start --> */}
                  </div>
                  {/* <!-- media end --> */}
                </div>
                {/* <!-- card-body end --> */}
              </div>
              {/* <!-- card end --> */}
            </div>


            -----------------------------------------

               {
            companies?.map(comp=>(
              <div className="d-flex flex-column align-items-center justify-content-between my-10">
                <h4>Products of {comp.name}</h4>
                <div className="d-sm-flex flex-row align-items-center justify-content-center flex-wrap my-5">
                  {
                    comp?.products?.map(prod=>(
                      <div
              className="col-xl-4 col-md-6 mb-xl-0 mb-13 my-5"
              data-aos="fade-right"
              data-aos-duration="500"
              style={{
                // width:"350px"
              }}
            >
              {/* <!-- card start --> */}
              <div className="card bg-white p-2 border-0">
                {/* <!-- card img start --> */}
                <img style={{
                  width: "320px",
                  height: "320px",
                  objectFit:"contain",
                  
                }} src={prod.photoURL ? prod.photoURL : "https://www.thermaxglobal.com/wp-content/uploads/2020/05/image-not-found-300x169.jpg"} className="card-img-top" alt="..." />
                {/* <!-- card img end --> */}
                {/* <!-- card-body start --> */}
                <div className="card-body pt-11 px-0 pb-0">
                  
                    <a className="text-uppercase font-size-3 font-weight-bold px-4 py-1">
                      Edited on : {prod.date}
                    </a>
                  
                  <h4>
                   
                      <a className="card-title font-size-7 mt-8 mb-6 heading-default-color">
                        {prod.name}
                      </a>
                  
                  </h4>
                  <p className="card-text mb-9 font-size-4">
                    {
                      prod.description
                    }
                  </p>
                  {/* <!-- media start --> */}
                  <div className="media mb-5 pr-9">
                    {/* <!-- media img start --> */}
                    <Link href="/#">
                      <a>
                        <img
                          src={prod.company_photo ? prod.company_photo : "https://www.thermaxglobal.com/wp-content/uploads/2020/05/image-not-found-300x169.jpg"}
                          className="align-self-center circle-54 mr-3 mt-2"
                          alt="image not found"
                        />
                      </a>
                    </Link>
                    {/* <!-- media img start --> */}
                    {/* <!-- media body start --> */}
                    <div className="media-body pl-4 pt-2">
                      <h6 className="mb-0">
                        <Link href="/#">
                          <a className="mb-0 font-size-4 font-weight-semibold heading-default-color line-height-reset">
                            Anna Frank
                          </a>
                        </Link>
                      </h6>
                      <p className="mb-0">
                        <Link href="/#">
                          <a className="font-size-3 text-default-color">
                            Creative Director
                          </a>
                        </Link>
                      </p>
                    </div>
                    {/* <!-- media body start --> */}
                  </div>
                  {/* <!-- media end --> */}
                </div>
                {/* <!-- card-body end --> */}
              </div>
              {/* <!-- card end --> */}
            </div>
                    ))
                  }
                </div>
              </div>
            ))
          }